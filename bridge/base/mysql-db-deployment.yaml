#! mysql-db-deployment.yaml
# Generated code, do not edit
apiVersion: apps/v1
kind: Deployment
metadata:
    name: mysql-db
    namespace: trello-kopya
    labels:
        com.docker.compose.project: trello-kopya
        com.docker.compose.service: mysql-db
spec:
    replicas: 1
    selector:
        matchLabels:
            com.docker.compose.project: trello-kopya
            com.docker.compose.service: mysql-db
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                com.docker.compose.project: trello-kopya
                com.docker.compose.service: mysql-db
                com.docker.compose.network.appnet: "true"
        spec:
            restartPolicy: unless-stopped
            containers:
                - name: mysql-db
                  image: mysql:latest
                  imagePullPolicy: IfNotPresent
                  env:
                    - name: MYSQL_DATABASE
                      value: "trello_todo_db"
                    - name: MYSQL_PASSWORD
                      value: "example_password"
                    - name: MYSQL_ROOT_PASSWORD
                      value: "example_root_password"
                    - name: MYSQL_USER
                      value: "trello_user"
                  livenessProbe:
                    exec:
                        command: [mysqladmin ping -h localhost]
                    periodSeconds: 10
                    timeoutSeconds: 5
                    failureThreshold: 5
                  ports:
                    - name: mysql-db-3306
                      containerPort: 3306
                    - name: mysql-db-33060
                      containerPort: 33060
                  volumeMounts:
                    - name: var-lib-mysql
                      mountPath: /var/lib/mysql
            volumes:
                - name: var-lib-mysql
                  persistentVolumeClaim:
                    claimName: mysql-db-mysql-data
